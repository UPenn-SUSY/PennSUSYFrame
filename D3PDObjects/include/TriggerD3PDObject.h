// Dear emacs, this is -*- c++ -*-
// -------------------------------------------------------------
//             Code produced by D3PDMakerReader
//
//  author: Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch>
// -------------------------------------------------------------
#ifndef D3PDREADER_TriggerD3PDObject_H
#define D3PDREADER_TriggerD3PDObject_H

#include <map>

#include <TObject.h>
#include <TString.h>

#include "VarHandle.h"

class TTree;

namespace D3PDReader {

   /**
    * Code generated by CodeGenerator_v2 on:
    *  host = pc-penn-d-07
    *  OS   = Linux / 2.6.18-274.18.1.el5
    *  user = bjackson
    */
   class TriggerD3PDObject : public TObject {

   public:
      /// Constructor used when reading from a TTree
      TriggerD3PDObject( const ::Long64_t& master, const char* prefix = "", bool is_data = true );
      /// Constructor when the object is only used for writing data out
      TriggerD3PDObject( const char* prefix = "", bool is_data = true );

      /// Get the currently configured prefix value
      const char* GetPrefix() const;
      /// Set the prefix for the variables
      void SetPrefix( const char* prefix );

      /// Connect the object to an input TTree
      void ReadFrom( ::TTree* tree );
      /// Connect the object to an output TTree
      void WriteTo( ::TTree* tree );

      /// Turn (selected) branches either on or off
      void SetActive( ::Bool_t active = kTRUE,
                      const ::TString& pattern = ".*" );
      /// Read in all the variables that we need to write out as well
      void ReadAllActive();

      /// Did this event pass trigger EF_2e12Tvh_loose1
      VarHandle< Bool_t > EF_2e12Tvh_loose1;
      /// Did this event pass trigger EF_2mu13
      VarHandle< Bool_t > EF_2mu13;
      /// Did this event pass trigger EF_e12Tvh_medium1_mu8
      VarHandle< Bool_t > EF_e12Tvh_medium1_mu8;
      /// Did this event pass trigger EF_e24vh_medium1_e7_medium1
      VarHandle< Bool_t > EF_e24vh_medium1_e7_medium1;
      /// Did this event pass trigger EF_mu18_tight_e7_medium1
      VarHandle< Bool_t > EF_mu18_tight_e7_medium1;
      /// Did this event pass trigger EF_mu18_tight_mu8_EFFS
      VarHandle< Bool_t > EF_mu18_tight_mu8_EFFS;

   private:
      std::map< ::TString, VarHandleBase* > fHandles; ///< Book-keeper of the VarHandle members
      const ::Bool_t fFromInput; ///< Flag specifying if object is used for D3PD reading
      const ::TString fPrefix; ///< Prefix to the branch names


bool is_data; // ~bj 

      ClassDef( TriggerD3PDObject, 0 )

   }; // class TriggerD3PDObject

} // namespace D3PDReader

#endif // D3PDREADER_TriggerD3PDObject_H
