// Dear emacs, this is -*- c++ -*-
// -------------------------------------------------------------
//             Code produced by D3PDMakerReader
//
//  author: Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch>
// -------------------------------------------------------------
#ifndef D3PDREADER_TauD3PDObject_H
#define D3PDREADER_TauD3PDObject_H

#include <map>
#include <vector>
using std::vector;

#include <TObject.h>
#include <TString.h>

#include "VarHandle.h"
#include "VarProxy.h"

class TTree;

namespace D3PDReader {

   // Forward declaration(s):
   class TauD3PDObject;

   /**
    * Code generated by CodeGenerator_v2 on:
    *  host = pc-penn-d-07
    *  OS   = Linux / 2.6.18-274.18.1.el5
    *  user = bjackson
    */
   class TauD3PDObjectElement : public TObject {

      friend class TauD3PDObject;

   protected:
      /// Constructor only visible to TauD3PDObject
      TauD3PDObjectElement( size_t index, const TauD3PDObject& parent, bool is_data = true );

   public:
      /// Copy constructor
      TauD3PDObjectElement( const TauD3PDObjectElement& parent, bool is_data = true );

      VarProxy< float > Et;
      VarProxy< float > pt;
      VarProxy< float > m;
      VarProxy< float > eta;
      VarProxy< float > phi;
      VarProxy< float > charge;
      VarProxy< float > BDTEleScore;
      VarProxy< float > BDTJetScore;
      VarProxy< float > likelihood;
      VarProxy< float > SafeLikelihood;
      VarProxy< int > electronVetoLoose;
      VarProxy< int > electronVetoMedium;
      VarProxy< int > electronVetoTight;
      VarProxy< int > muonVeto;
      VarProxy< int > tauLlhLoose;
      VarProxy< int > tauLlhMedium;
      VarProxy< int > tauLlhTight;
      VarProxy< int > JetBDTSigLoose;
      VarProxy< int > JetBDTSigMedium;
      VarProxy< int > JetBDTSigTight;
      VarProxy< int > EleBDTLoose;
      VarProxy< int > EleBDTMedium;
      VarProxy< int > EleBDTTight;
      VarProxy< int > author;
      VarProxy< int > RoIWord;
      VarProxy< int > nProng;
      VarProxy< int > numTrack;
      VarProxy< int > seedCalo_numTrack;
      VarProxy< int > seedCalo_nWideTrk;
      VarProxy< int > nOtherTrk;
      VarProxy< float > etOverPtLeadTrk;
      VarProxy< float > ipZ0SinThetaSigLeadTrk;
      VarProxy< float > leadTrkPt;
      VarProxy< int > nLooseTrk;
      VarProxy< int > nLooseConvTrk;
      VarProxy< int > nProngLoose;
      VarProxy< float > ipSigLeadTrk;
      VarProxy< float > ipSigLeadLooseTrk;
      VarProxy< float > etOverPtLeadLooseTrk;
      VarProxy< float > leadLooseTrkPt;
      VarProxy< float > chrgLooseTrk;
      VarProxy< float > massTrkSys;
      VarProxy< float > trkWidth2;
      VarProxy< float > trFlightPathSig;
      VarProxy< float > etEflow;
      VarProxy< float > mEflow;
      VarProxy< int > nPi0;
      VarProxy< float > ele_E237E277;
      VarProxy< float > ele_PresamplerFraction;
      VarProxy< float > ele_ECALFirstFraction;
      VarProxy< float > EM_TES_scale;
      VarProxy< float > LC_TES_precalib;
      VarProxy< float > TRTHTOverLT_LeadTrk;
      VarProxy< float > seedCalo_EMRadius;
      VarProxy< float > seedCalo_hadRadius;
      VarProxy< float > seedCalo_etEMAtEMScale;
      VarProxy< float > seedCalo_etHadAtEMScale;
      VarProxy< float > seedCalo_isolFrac;
      VarProxy< float > seedCalo_centFrac;
      VarProxy< float > seedCalo_stripWidth2;
      VarProxy< int > seedCalo_nStrip;
      VarProxy< float > seedCalo_eta;
      VarProxy< float > seedCalo_phi;
      VarProxy< float > seedCalo_nIsolLooseTrk;
      VarProxy< float > seedCalo_trkAvgDist;
      VarProxy< float > seedCalo_trkRmsDist;
      VarProxy< float > seedCalo_caloIso;
      VarProxy< float > seedCalo_caloIsoCorrected;
      VarProxy< float > seedCalo_dRmax;
      VarProxy< float > seedCalo_lead2ClusterEOverAllClusterE;
      VarProxy< float > seedCalo_lead3ClusterEOverAllClusterE;
      VarProxy< float > seedCalo_etHadCalib;
      VarProxy< float > seedCalo_etEMCalib;
      VarProxy< int > numTopoClusters;
      VarProxy< float > numEffTopoClusters;
      VarProxy< float > topoInvMass;
      VarProxy< float > effTopoInvMass;
      VarProxy< float > topoMeanDeltaR;
      VarProxy< float > effTopoMeanDeltaR;
      VarProxy< float > numCells;
      VarProxy< float > seedTrk_EMRadius;
      VarProxy< float > seedTrk_isolFrac;
      VarProxy< float > seedTrk_etChrgHadOverSumTrkPt;
      VarProxy< float > seedTrk_isolFracWide;
      VarProxy< float > seedTrk_etHadAtEMScale;
      VarProxy< float > seedTrk_etEMAtEMScale;
      VarProxy< float > seedTrk_etEMCL;
      VarProxy< float > seedTrk_etChrgEM;
      VarProxy< float > seedTrk_etNeuEM;
      VarProxy< float > seedTrk_etResNeuEM;
      VarProxy< float > seedTrk_hadLeakEt;
      VarProxy< float > seedTrk_sumEMCellEtOverLeadTrkPt;
      VarProxy< float > seedTrk_secMaxStripEt;
      VarProxy< float > seedTrk_stripWidth2;
      VarProxy< int > seedTrk_nStrip;
      VarProxy< float > seedTrk_etChrgHad;
      VarProxy< int > seedTrk_nOtherCoreTrk;
      VarProxy< int > seedTrk_nIsolTrk;
      VarProxy< float > seedTrk_etIsolEM;
      VarProxy< float > seedTrk_etIsolHad;
      VarProxy< float > cellBasedEnergyRing1;
      VarProxy< float > cellBasedEnergyRing2;
      VarProxy< float > cellBasedEnergyRing3;
      VarProxy< float > cellBasedEnergyRing4;
      VarProxy< float > cellBasedEnergyRing5;
      VarProxy< float > cellBasedEnergyRing6;
      VarProxy< float > cellBasedEnergyRing7;
      VarProxy< float > calcVars_etHad_EMScale_Pt3Trks;
      VarProxy< float > calcVars_etEM_EMScale_Pt3Trks;
      VarProxy< float > calcVars_ipSigLeadLooseTrk;
      VarProxy< float > calcVars_drMin;
      VarProxy< float > calcVars_calRadius;
      VarProxy< float > calcVars_EMFractionAtEMScale;
      VarProxy< float > calcVars_trackIso;
      VarProxy< float > calcVars_ChPiEMEOverCaloEME;
      VarProxy< float > calcVars_PSSFraction;
      VarProxy< float > calcVars_EMPOverTrkSysP;
      VarProxy< float > calcVars_pi0BDTPrimaryScore;
      VarProxy< float > calcVars_pi0BDTSecondaryScore;
      VarProxy< float > calcVars_corrCentFrac;
      VarProxy< float > calcVars_corrFTrk;
      VarProxy< float > calcVars_interAxis_eta;
      VarProxy< float > calcVars_interAxis_phi;
      VarProxy< float > pi0_cl1_pt;
      VarProxy< float > pi0_cl1_eta;
      VarProxy< float > pi0_cl1_phi;
      VarProxy< float > pi0_cl2_pt;
      VarProxy< float > pi0_cl2_eta;
      VarProxy< float > pi0_cl2_phi;
      VarProxy< float > pi0_vistau_pt;
      VarProxy< float > pi0_vistau_eta;
      VarProxy< float > pi0_vistau_phi;
      VarProxy< float > pi0_vistau_m;
      VarProxy< int > pi0_n;
      VarProxy< int > pantau_isPanTauCandidate;
      VarProxy< double > pantau_PanTauScore;
      VarProxy< int > pantau_NChargedEFO;
      VarProxy< int > pantau_NChargedQualifiedEFO;
      VarProxy< int > pantau_NNeutralEFO;
      VarProxy< unsigned int > pantau_AbsSumCharge;
      VarProxy< double > pantau_EflowJetMomentDRAll;
      VarProxy< double > pantau_EflowJetMomentDRChrg;
      VarProxy< double > pantau_EflowJetMomentDREMNeut;
      VarProxy< double > pantau_EflowJetMomentDRHADNeut;
      VarProxy< double > pantau_EtIn01OverEtIn02InvSigm;
      VarProxy< double > pantau_EtIn02To04OverTotalEtInvSigm;
      VarProxy< double > pantau_EtIn01OverEtIn04InvSigm;
      VarProxy< double > pantau_EtIn01OverEtIn04;
      VarProxy< double > pantau_EflowMeanAngleBtwLeadingChargedQualifiedComponents;
      VarProxy< double > pantau_JetSphericity;
      VarProxy< double > pantau_TransImpactParamSignfTrack1;
      VarProxy< double > pantau_EflowAngleJetAxisLeadingChargedQualified;
      VarProxy< double > pantau_EflowAngleChargedAxisNeutralAxis;
      VarProxy< double > pantau_EflowAngleLeadingChrgQualified2ndLeadingChrgQualified;
      VarProxy< double > pantau_EflowInvariantMassAll;
      VarProxy< double > pantau_EflowStdDevEtToSumEt;
      VarProxy< double > pantau_EflowEtLeadingChrgQualifiedOverTotalEt;
      VarProxy< double > pantau_EflowSumEAll;
      VarProxy< double > pantau_EflowChargedSumEt;
      VarProxy< float > leadTrack_eta;
      VarProxy< float > leadTrack_phi;
      VarProxy< vector<float> > cluster_E;
      VarProxy< vector<float> > cluster_eta;
      VarProxy< vector<float> > cluster_phi;
      VarProxy< vector<float> > cluster_eta_atTJVA;
      VarProxy< vector<float> > cluster_phi_atTJVA;
      VarProxy< vector<float> > cluster_PreSamplerStripF;
      VarProxy< vector<float> > cluster_EMLayer2F;
      VarProxy< vector<float> > cluster_EMLayer3F;
      VarProxy< unsigned int > cluster_n;
      VarProxy< vector<float> > Pi0Cluster_pt;
      VarProxy< vector<float> > Pi0Cluster_eta;
      VarProxy< vector<float> > Pi0Cluster_phi;
      VarProxy< float > secvtx_x;
      VarProxy< float > secvtx_y;
      VarProxy< float > secvtx_z;
      VarProxy< float > secvtx_chiSquared;
      VarProxy< float > secvtx_numberDoF;
      VarProxy< float > privtx_x;
      VarProxy< float > privtx_y;
      VarProxy< float > privtx_z;
      VarProxy< float > privtx_chiSquared;
      VarProxy< float > privtx_numberDoF;
      VarProxy< float > privtx_jvf;
      VarProxy< float > jet_Et;
      VarProxy< float > jet_pt;
      VarProxy< float > jet_m;
      VarProxy< float > jet_eta;
      VarProxy< float > jet_phi;
      VarProxy< float > jet_WIDTH;
      VarProxy< float > jet_n90;
      VarProxy< float > jet_n90constituents;
      VarProxy< float > jet_BCH_CORR_CELL;
      VarProxy< float > jet_BCH_CORR_JET;
      VarProxy< float > jet_BCH_CORR_JET_FORCELL;
      VarProxy< float > jet_ENG_BAD_CELLS;
      VarProxy< float > jet_N_BAD_CELLS;
      VarProxy< float > jet_N_BAD_CELLS_CORR;
      VarProxy< float > jet_BAD_CELLS_CORR_E;
      VarProxy< float > jet_Timing;
      VarProxy< float > jet_LArQuality;
      VarProxy< float > jet_nTrk;
      VarProxy< float > jet_sumPtTrk;
      VarProxy< float > jet_OriginIndex;
      VarProxy< float > jet_HECQuality;
      VarProxy< float > jet_NegativeE;
      VarProxy< float > jet_YFlip12;
      VarProxy< float > jet_YFlip23;
      VarProxy< float > jet_BCH_CORR_DOTX;
      VarProxy< int > jet_SamplingMax;
      VarProxy< float > jet_fracSamplingMax;
      VarProxy< float > jet_hecf;
      VarProxy< float > jet_tgap3f;
      VarProxy< int > jet_isUgly;
      VarProxy< int > jet_isBadLooseMinus;
      VarProxy< int > jet_isBadLoose;
      VarProxy< int > jet_isBadMedium;
      VarProxy< int > jet_isBadTight;
      VarProxy< float > jet_emfrac;
      VarProxy< float > jet_GCWJES;
      VarProxy< float > jet_EMJES;
      VarProxy< float > jet_emscale_E;
      VarProxy< float > jet_emscale_pt;
      VarProxy< float > jet_emscale_m;
      VarProxy< float > jet_emscale_eta;
      VarProxy< float > jet_emscale_phi;
      VarProxy< float > jet_jvtx_x;
      VarProxy< float > jet_jvtx_y;
      VarProxy< float > jet_jvtx_z;
      VarProxy< float > jet_jvtxf;
      VarProxy< double > jet_flavor_weight;
      VarProxy< double > jet_flavor_weight_TrackCounting2D;
      VarProxy< double > jet_flavor_weight_JetProb;
      VarProxy< double > jet_flavor_weight_IP1D;
      VarProxy< double > jet_flavor_weight_IP2D;
      VarProxy< double > jet_flavor_weight_IP3D;
      VarProxy< double > jet_flavor_weight_SV0;
      VarProxy< double > jet_flavor_weight_SV1;
      VarProxy< double > jet_flavor_weight_SV2;
      VarProxy< double > jet_flavor_weight_JetFitterTag;
      VarProxy< double > jet_flavor_weight_JetFitterCOMB;
      VarProxy< double > jet_flavor_weight_JetFitterTagNN;
      VarProxy< double > jet_flavor_weight_JetFitterCOMBNN;
      VarProxy< double > jet_flavor_weight_SoftMuonTag;
      VarProxy< double > jet_flavor_weight_SoftElectronTag;
      VarProxy< double > jet_flavor_weight_IP3DSV1;
      VarProxy< float > jet_e_PreSamplerB;
      VarProxy< float > jet_e_EMB1;
      VarProxy< float > jet_e_EMB2;
      VarProxy< float > jet_e_EMB3;
      VarProxy< float > jet_e_PreSamplerE;
      VarProxy< float > jet_e_EME1;
      VarProxy< float > jet_e_EME2;
      VarProxy< float > jet_e_EME3;
      VarProxy< float > jet_e_HEC0;
      VarProxy< float > jet_e_HEC1;
      VarProxy< float > jet_e_HEC2;
      VarProxy< float > jet_e_HEC3;
      VarProxy< float > jet_e_TileBar0;
      VarProxy< float > jet_e_TileBar1;
      VarProxy< float > jet_e_TileBar2;
      VarProxy< float > jet_e_TileGap1;
      VarProxy< float > jet_e_TileGap2;
      VarProxy< float > jet_e_TileGap3;
      VarProxy< float > jet_e_TileExt0;
      VarProxy< float > jet_e_TileExt1;
      VarProxy< float > jet_e_TileExt2;
      VarProxy< float > jet_e_FCAL0;
      VarProxy< float > jet_e_FCAL1;
      VarProxy< float > jet_e_FCAL2;
      VarProxy< vector<float> > jet_shapeBins;
      /// Number of ntuple rows.
      VarProxy< int > track_atTJVA_n;
      VarProxy< vector<float> > track_atTJVA_d0;
      VarProxy< vector<float> > track_atTJVA_z0;
      VarProxy< vector<float> > track_atTJVA_phi;
      VarProxy< vector<float> > track_atTJVA_theta;
      VarProxy< vector<float> > track_atTJVA_qoverp;
      VarProxy< vector<float> > track_atTJVA_pt;
      VarProxy< vector<float> > track_atTJVA_eta;
      /// Number of ntuple rows.
      VarProxy< int > seedCalo_wideTrk_atTJVA_n;
      VarProxy< vector<float> > seedCalo_wideTrk_atTJVA_d0;
      VarProxy< vector<float> > seedCalo_wideTrk_atTJVA_z0;
      VarProxy< vector<float> > seedCalo_wideTrk_atTJVA_phi;
      VarProxy< vector<float> > seedCalo_wideTrk_atTJVA_theta;
      VarProxy< vector<float> > seedCalo_wideTrk_atTJVA_qoverp;
      VarProxy< vector<float> > seedCalo_wideTrk_atTJVA_pt;
      VarProxy< vector<float> > seedCalo_wideTrk_atTJVA_eta;
      /// Number of ntuple rows.
      VarProxy< int > otherTrk_atTJVA_n;
      /// Number of ntuple rows.
      VarProxy< int > track_n;
      VarProxy< vector<float> > track_d0;
      VarProxy< vector<float> > track_z0;
      VarProxy< vector<float> > track_phi;
      VarProxy< vector<float> > track_theta;
      VarProxy< vector<float> > track_qoverp;
      VarProxy< vector<float> > track_pt;
      VarProxy< vector<float> > track_eta;
      VarProxy< vector<float> > track_atPV_d0;
      VarProxy< vector<float> > track_atPV_z0;
      VarProxy< vector<float> > track_atPV_phi;
      VarProxy< vector<float> > track_atPV_theta;
      VarProxy< vector<float> > track_atPV_qoverp;
      VarProxy< vector<float> > track_atPV_pt;
      VarProxy< vector<float> > track_atPV_eta;
      VarProxy< vector<int> > track_nBLHits;
      VarProxy< vector<int> > track_nPixHits;
      VarProxy< vector<int> > track_nSCTHits;
      VarProxy< vector<int> > track_nTRTHits;
      VarProxy< vector<int> > track_nTRTHighTHits;
      VarProxy< vector<int> > track_nTRTXenonHits;
      VarProxy< vector<int> > track_nPixHoles;
      VarProxy< vector<int> > track_nSCTHoles;
      VarProxy< vector<int> > track_nTRTHoles;
      VarProxy< vector<int> > track_nPixelDeadSensors;
      VarProxy< vector<int> > track_nSCTDeadSensors;
      VarProxy< vector<int> > track_nBLSharedHits;
      VarProxy< vector<int> > track_nPixSharedHits;
      VarProxy< vector<int> > track_nSCTSharedHits;
      VarProxy< vector<int> > track_nBLayerSplitHits;
      VarProxy< vector<int> > track_nPixSplitHits;
      VarProxy< vector<int> > track_nBLayerOutliers;
      VarProxy< vector<int> > track_nPixelOutliers;
      VarProxy< vector<int> > track_nSCTOutliers;
      VarProxy< vector<int> > track_nTRTOutliers;
      VarProxy< vector<int> > track_nTRTHighTOutliers;
      VarProxy< vector<int> > track_nContribPixelLayers;
      VarProxy< vector<int> > track_nGangedPixels;
      VarProxy< vector<int> > track_nGangedFlaggedFakes;
      VarProxy< vector<int> > track_nPixelSpoiltHits;
      VarProxy< vector<int> > track_nSCTDoubleHoles;
      VarProxy< vector<int> > track_nSCTSpoiltHits;
      VarProxy< vector<int> > track_expectBLayerHit;
      VarProxy< vector<int> > track_nHits;
      VarProxy< vector<float> > track_TRTHighTHitsRatio;
      VarProxy< vector<float> > track_TRTHighTOutliersRatio;
      /// Number of ntuple rows.
      VarProxy< int > seedCalo_track_n;
      /// Number of ntuple rows.
      VarProxy< int > seedCalo_wideTrk_n;
      VarProxy< vector<int> > seedCalo_wideTrk_nBLHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nPixHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nSCTHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nTRTHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nTRTHighTHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nTRTXenonHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nPixHoles;
      VarProxy< vector<int> > seedCalo_wideTrk_nSCTHoles;
      VarProxy< vector<int> > seedCalo_wideTrk_nTRTHoles;
      VarProxy< vector<int> > seedCalo_wideTrk_nPixelDeadSensors;
      VarProxy< vector<int> > seedCalo_wideTrk_nSCTDeadSensors;
      VarProxy< vector<int> > seedCalo_wideTrk_nBLSharedHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nPixSharedHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nSCTSharedHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nBLayerSplitHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nPixSplitHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nBLayerOutliers;
      VarProxy< vector<int> > seedCalo_wideTrk_nPixelOutliers;
      VarProxy< vector<int> > seedCalo_wideTrk_nSCTOutliers;
      VarProxy< vector<int> > seedCalo_wideTrk_nTRTOutliers;
      VarProxy< vector<int> > seedCalo_wideTrk_nTRTHighTOutliers;
      VarProxy< vector<int> > seedCalo_wideTrk_nContribPixelLayers;
      VarProxy< vector<int> > seedCalo_wideTrk_nGangedPixels;
      VarProxy< vector<int> > seedCalo_wideTrk_nGangedFlaggedFakes;
      VarProxy< vector<int> > seedCalo_wideTrk_nPixelSpoiltHits;
      VarProxy< vector<int> > seedCalo_wideTrk_nSCTDoubleHoles;
      VarProxy< vector<int> > seedCalo_wideTrk_nSCTSpoiltHits;
      VarProxy< vector<int> > seedCalo_wideTrk_expectBLayerHit;
      VarProxy< vector<int> > seedCalo_wideTrk_nHits;
      /// Number of ntuple rows.
      VarProxy< int > otherTrk_n;
      /// DeltaR between the offline and trigger objects.
      VarProxy< float > EF_dr;
      VarProxy< float > EF_E;
      VarProxy< float > EF_Et;
      VarProxy< float > EF_pt;
      VarProxy< float > EF_eta;
      VarProxy< float > EF_phi;
      VarProxy< int > EF_matched;
      /// DeltaR between the offline and trigger objects.
      VarProxy< float > L2_dr;
      VarProxy< float > L2_E;
      VarProxy< float > L2_Et;
      VarProxy< float > L2_pt;
      VarProxy< float > L2_eta;
      VarProxy< float > L2_phi;
      VarProxy< int > L2_matched;
      /// DeltaR between the offline and trigger objects.
      VarProxy< float > L1_dr;
      VarProxy< float > L1_Et;
      VarProxy< float > L1_pt;
      VarProxy< float > L1_eta;
      VarProxy< float > L1_phi;
      VarProxy< int > L1_matched;
// MC only
      VarProxy< float > trueTauAssocSmall_dr;
      /// Index in trueTau_
      VarProxy< int > trueTauAssocSmall_index;
      VarProxy< int > trueTauAssocSmall_matched;
// end MC only
      VarProxy< vector<float> > MET_wpx;
      VarProxy< vector<float> > MET_wpy;
      VarProxy< vector<float> > MET_wet;
      VarProxy< vector<unsigned int> > MET_statusWord;
      VarProxy< vector<float> > MET_STVF_wpx;
      VarProxy< vector<float> > MET_STVF_wpy;
      VarProxy< vector<float> > MET_STVF_wet;
      VarProxy< vector<unsigned int> > MET_STVF_statusWord;


bool is_data; // ~bj 

      ClassDef( TauD3PDObjectElement, 0 )

   }; // class TauD3PDObjectElement

   /**
    * Code generated by CodeGenerator_v2 on:
    *  host = pc-penn-d-07
    *  OS   = Linux / 2.6.18-274.18.1.el5
    *  user = bjackson
    */
   class TauD3PDObject : public TObject {

   public:
      /// Constructor used when reading from a TTree
      TauD3PDObject( const ::Long64_t& master, const char* prefix = "tau_", bool is_data = true );
      /// Constructor when the object is only used for writing data out
      TauD3PDObject( const char* prefix = "tau_", bool is_data = true );

      /// Get the currently configured prefix value
      const char* GetPrefix() const;
      /// Set the prefix for the variables
      void SetPrefix( const char* prefix );

      /// Connect the object to an input TTree
      void ReadFrom( ::TTree* tree );
      /// Connect the object to an output TTree
      void WriteTo( ::TTree* tree );

      /// Turn (selected) branches either on or off
      void SetActive( ::Bool_t active = kTRUE,
                      const ::TString& pattern = ".*" );
      /// Read in all the variables that we need to write out as well
      void ReadAllActive();

      /// Clear the container. Useful when writing new branches.
      void Clear( Option_t* option = "" );
      /// Add one element to an output collection
      TauD3PDObject& Add( const TauD3PDObjectElement& el );

      /// Access a proxy class describing one element of the container
      TauD3PDObjectElement& operator[]( size_t index );
      /// Access a proxy class describing one element of the container (constant version)
      const TauD3PDObjectElement& operator[]( size_t index ) const;
      /// Add one element to an output collection
      TauD3PDObject& operator+=( const TauD3PDObjectElement& el );

      /// Number of ntuple rows.
      VarHandle< Int_t > n;
      VarHandle< vector<float>* > Et;
      VarHandle< vector<float>* > pt;
      VarHandle< vector<float>* > m;
      VarHandle< vector<float>* > eta;
      VarHandle< vector<float>* > phi;
      VarHandle< vector<float>* > charge;
      VarHandle< vector<float>* > BDTEleScore;
      VarHandle< vector<float>* > BDTJetScore;
      VarHandle< vector<float>* > likelihood;
      VarHandle< vector<float>* > SafeLikelihood;
      VarHandle< vector<int>* > electronVetoLoose;
      VarHandle< vector<int>* > electronVetoMedium;
      VarHandle< vector<int>* > electronVetoTight;
      VarHandle< vector<int>* > muonVeto;
      VarHandle< vector<int>* > tauLlhLoose;
      VarHandle< vector<int>* > tauLlhMedium;
      VarHandle< vector<int>* > tauLlhTight;
      VarHandle< vector<int>* > JetBDTSigLoose;
      VarHandle< vector<int>* > JetBDTSigMedium;
      VarHandle< vector<int>* > JetBDTSigTight;
      VarHandle< vector<int>* > EleBDTLoose;
      VarHandle< vector<int>* > EleBDTMedium;
      VarHandle< vector<int>* > EleBDTTight;
      VarHandle< vector<int>* > author;
      VarHandle< vector<int>* > RoIWord;
      VarHandle< vector<int>* > nProng;
      VarHandle< vector<int>* > numTrack;
      VarHandle< vector<int>* > seedCalo_numTrack;
      VarHandle< vector<int>* > seedCalo_nWideTrk;
      VarHandle< vector<int>* > nOtherTrk;
      VarHandle< vector<float>* > etOverPtLeadTrk;
      VarHandle< vector<float>* > ipZ0SinThetaSigLeadTrk;
      VarHandle< vector<float>* > leadTrkPt;
      VarHandle< vector<int>* > nLooseTrk;
      VarHandle< vector<int>* > nLooseConvTrk;
      VarHandle< vector<int>* > nProngLoose;
      VarHandle< vector<float>* > ipSigLeadTrk;
      VarHandle< vector<float>* > ipSigLeadLooseTrk;
      VarHandle< vector<float>* > etOverPtLeadLooseTrk;
      VarHandle< vector<float>* > leadLooseTrkPt;
      VarHandle< vector<float>* > chrgLooseTrk;
      VarHandle< vector<float>* > massTrkSys;
      VarHandle< vector<float>* > trkWidth2;
      VarHandle< vector<float>* > trFlightPathSig;
      VarHandle< vector<float>* > etEflow;
      VarHandle< vector<float>* > mEflow;
      VarHandle< vector<int>* > nPi0;
      VarHandle< vector<float>* > ele_E237E277;
      VarHandle< vector<float>* > ele_PresamplerFraction;
      VarHandle< vector<float>* > ele_ECALFirstFraction;
      VarHandle< vector<float>* > EM_TES_scale;
      VarHandle< vector<float>* > LC_TES_precalib;
      VarHandle< vector<float>* > TRTHTOverLT_LeadTrk;
      VarHandle< vector<float>* > seedCalo_EMRadius;
      VarHandle< vector<float>* > seedCalo_hadRadius;
      VarHandle< vector<float>* > seedCalo_etEMAtEMScale;
      VarHandle< vector<float>* > seedCalo_etHadAtEMScale;
      VarHandle< vector<float>* > seedCalo_isolFrac;
      VarHandle< vector<float>* > seedCalo_centFrac;
      VarHandle< vector<float>* > seedCalo_stripWidth2;
      VarHandle< vector<int>* > seedCalo_nStrip;
      VarHandle< vector<float>* > seedCalo_eta;
      VarHandle< vector<float>* > seedCalo_phi;
      VarHandle< vector<float>* > seedCalo_nIsolLooseTrk;
      VarHandle< vector<float>* > seedCalo_trkAvgDist;
      VarHandle< vector<float>* > seedCalo_trkRmsDist;
      VarHandle< vector<float>* > seedCalo_caloIso;
      VarHandle< vector<float>* > seedCalo_caloIsoCorrected;
      VarHandle< vector<float>* > seedCalo_dRmax;
      VarHandle< vector<float>* > seedCalo_lead2ClusterEOverAllClusterE;
      VarHandle< vector<float>* > seedCalo_lead3ClusterEOverAllClusterE;
      VarHandle< vector<float>* > seedCalo_etHadCalib;
      VarHandle< vector<float>* > seedCalo_etEMCalib;
      VarHandle< vector<int>* > numTopoClusters;
      VarHandle< vector<float>* > numEffTopoClusters;
      VarHandle< vector<float>* > topoInvMass;
      VarHandle< vector<float>* > effTopoInvMass;
      VarHandle< vector<float>* > topoMeanDeltaR;
      VarHandle< vector<float>* > effTopoMeanDeltaR;
      VarHandle< vector<float>* > numCells;
      VarHandle< vector<float>* > seedTrk_EMRadius;
      VarHandle< vector<float>* > seedTrk_isolFrac;
      VarHandle< vector<float>* > seedTrk_etChrgHadOverSumTrkPt;
      VarHandle< vector<float>* > seedTrk_isolFracWide;
      VarHandle< vector<float>* > seedTrk_etHadAtEMScale;
      VarHandle< vector<float>* > seedTrk_etEMAtEMScale;
      VarHandle< vector<float>* > seedTrk_etEMCL;
      VarHandle< vector<float>* > seedTrk_etChrgEM;
      VarHandle< vector<float>* > seedTrk_etNeuEM;
      VarHandle< vector<float>* > seedTrk_etResNeuEM;
      VarHandle< vector<float>* > seedTrk_hadLeakEt;
      VarHandle< vector<float>* > seedTrk_sumEMCellEtOverLeadTrkPt;
      VarHandle< vector<float>* > seedTrk_secMaxStripEt;
      VarHandle< vector<float>* > seedTrk_stripWidth2;
      VarHandle< vector<int>* > seedTrk_nStrip;
      VarHandle< vector<float>* > seedTrk_etChrgHad;
      VarHandle< vector<int>* > seedTrk_nOtherCoreTrk;
      VarHandle< vector<int>* > seedTrk_nIsolTrk;
      VarHandle< vector<float>* > seedTrk_etIsolEM;
      VarHandle< vector<float>* > seedTrk_etIsolHad;
      VarHandle< vector<float>* > cellBasedEnergyRing1;
      VarHandle< vector<float>* > cellBasedEnergyRing2;
      VarHandle< vector<float>* > cellBasedEnergyRing3;
      VarHandle< vector<float>* > cellBasedEnergyRing4;
      VarHandle< vector<float>* > cellBasedEnergyRing5;
      VarHandle< vector<float>* > cellBasedEnergyRing6;
      VarHandle< vector<float>* > cellBasedEnergyRing7;
      VarHandle< vector<float>* > calcVars_etHad_EMScale_Pt3Trks;
      VarHandle< vector<float>* > calcVars_etEM_EMScale_Pt3Trks;
      VarHandle< vector<float>* > calcVars_ipSigLeadLooseTrk;
      VarHandle< vector<float>* > calcVars_drMin;
      VarHandle< vector<float>* > calcVars_calRadius;
      VarHandle< vector<float>* > calcVars_EMFractionAtEMScale;
      VarHandle< vector<float>* > calcVars_trackIso;
      VarHandle< vector<float>* > calcVars_ChPiEMEOverCaloEME;
      VarHandle< vector<float>* > calcVars_PSSFraction;
      VarHandle< vector<float>* > calcVars_EMPOverTrkSysP;
      VarHandle< vector<float>* > calcVars_pi0BDTPrimaryScore;
      VarHandle< vector<float>* > calcVars_pi0BDTSecondaryScore;
      VarHandle< vector<float>* > calcVars_corrCentFrac;
      VarHandle< vector<float>* > calcVars_corrFTrk;
      VarHandle< vector<float>* > calcVars_interAxis_eta;
      VarHandle< vector<float>* > calcVars_interAxis_phi;
      VarHandle< vector<float>* > pi0_cl1_pt;
      VarHandle< vector<float>* > pi0_cl1_eta;
      VarHandle< vector<float>* > pi0_cl1_phi;
      VarHandle< vector<float>* > pi0_cl2_pt;
      VarHandle< vector<float>* > pi0_cl2_eta;
      VarHandle< vector<float>* > pi0_cl2_phi;
      VarHandle< vector<float>* > pi0_vistau_pt;
      VarHandle< vector<float>* > pi0_vistau_eta;
      VarHandle< vector<float>* > pi0_vistau_phi;
      VarHandle< vector<float>* > pi0_vistau_m;
      VarHandle< vector<int>* > pi0_n;
      VarHandle< vector<int>* > pantau_isPanTauCandidate;
      VarHandle< vector<double>* > pantau_PanTauScore;
      VarHandle< vector<int>* > pantau_NChargedEFO;
      VarHandle< vector<int>* > pantau_NChargedQualifiedEFO;
      VarHandle< vector<int>* > pantau_NNeutralEFO;
      VarHandle< vector<unsigned int>* > pantau_AbsSumCharge;
      VarHandle< vector<double>* > pantau_EflowJetMomentDRAll;
      VarHandle< vector<double>* > pantau_EflowJetMomentDRChrg;
      VarHandle< vector<double>* > pantau_EflowJetMomentDREMNeut;
      VarHandle< vector<double>* > pantau_EflowJetMomentDRHADNeut;
      VarHandle< vector<double>* > pantau_EtIn01OverEtIn02InvSigm;
      VarHandle< vector<double>* > pantau_EtIn02To04OverTotalEtInvSigm;
      VarHandle< vector<double>* > pantau_EtIn01OverEtIn04InvSigm;
      VarHandle< vector<double>* > pantau_EtIn01OverEtIn04;
      VarHandle< vector<double>* > pantau_EflowMeanAngleBtwLeadingChargedQualifiedComponents;
      VarHandle< vector<double>* > pantau_JetSphericity;
      VarHandle< vector<double>* > pantau_TransImpactParamSignfTrack1;
      VarHandle< vector<double>* > pantau_EflowAngleJetAxisLeadingChargedQualified;
      VarHandle< vector<double>* > pantau_EflowAngleChargedAxisNeutralAxis;
      VarHandle< vector<double>* > pantau_EflowAngleLeadingChrgQualified2ndLeadingChrgQualified;
      VarHandle< vector<double>* > pantau_EflowInvariantMassAll;
      VarHandle< vector<double>* > pantau_EflowStdDevEtToSumEt;
      VarHandle< vector<double>* > pantau_EflowEtLeadingChrgQualifiedOverTotalEt;
      VarHandle< vector<double>* > pantau_EflowSumEAll;
      VarHandle< vector<double>* > pantau_EflowChargedSumEt;
      VarHandle< vector<float>* > leadTrack_eta;
      VarHandle< vector<float>* > leadTrack_phi;
      VarHandle< vector<vector<float> >* > cluster_E;
      VarHandle< vector<vector<float> >* > cluster_eta;
      VarHandle< vector<vector<float> >* > cluster_phi;
      VarHandle< vector<vector<float> >* > cluster_eta_atTJVA;
      VarHandle< vector<vector<float> >* > cluster_phi_atTJVA;
      VarHandle< vector<vector<float> >* > cluster_PreSamplerStripF;
      VarHandle< vector<vector<float> >* > cluster_EMLayer2F;
      VarHandle< vector<vector<float> >* > cluster_EMLayer3F;
      VarHandle< vector<unsigned int>* > cluster_n;
      VarHandle< vector<vector<float> >* > Pi0Cluster_pt;
      VarHandle< vector<vector<float> >* > Pi0Cluster_eta;
      VarHandle< vector<vector<float> >* > Pi0Cluster_phi;
      VarHandle< vector<float>* > secvtx_x;
      VarHandle< vector<float>* > secvtx_y;
      VarHandle< vector<float>* > secvtx_z;
      VarHandle< vector<float>* > secvtx_chiSquared;
      VarHandle< vector<float>* > secvtx_numberDoF;
      VarHandle< vector<float>* > privtx_x;
      VarHandle< vector<float>* > privtx_y;
      VarHandle< vector<float>* > privtx_z;
      VarHandle< vector<float>* > privtx_chiSquared;
      VarHandle< vector<float>* > privtx_numberDoF;
      VarHandle< vector<float>* > privtx_jvf;
      VarHandle< vector<float>* > jet_Et;
      VarHandle< vector<float>* > jet_pt;
      VarHandle< vector<float>* > jet_m;
      VarHandle< vector<float>* > jet_eta;
      VarHandle< vector<float>* > jet_phi;
      VarHandle< vector<float>* > jet_WIDTH;
      VarHandle< vector<float>* > jet_n90;
      VarHandle< vector<float>* > jet_n90constituents;
      VarHandle< vector<float>* > jet_BCH_CORR_CELL;
      VarHandle< vector<float>* > jet_BCH_CORR_JET;
      VarHandle< vector<float>* > jet_BCH_CORR_JET_FORCELL;
      VarHandle< vector<float>* > jet_ENG_BAD_CELLS;
      VarHandle< vector<float>* > jet_N_BAD_CELLS;
      VarHandle< vector<float>* > jet_N_BAD_CELLS_CORR;
      VarHandle< vector<float>* > jet_BAD_CELLS_CORR_E;
      VarHandle< vector<float>* > jet_Timing;
      VarHandle< vector<float>* > jet_LArQuality;
      VarHandle< vector<float>* > jet_nTrk;
      VarHandle< vector<float>* > jet_sumPtTrk;
      VarHandle< vector<float>* > jet_OriginIndex;
      VarHandle< vector<float>* > jet_HECQuality;
      VarHandle< vector<float>* > jet_NegativeE;
      VarHandle< vector<float>* > jet_YFlip12;
      VarHandle< vector<float>* > jet_YFlip23;
      VarHandle< vector<float>* > jet_BCH_CORR_DOTX;
      VarHandle< vector<int>* > jet_SamplingMax;
      VarHandle< vector<float>* > jet_fracSamplingMax;
      VarHandle< vector<float>* > jet_hecf;
      VarHandle< vector<float>* > jet_tgap3f;
      VarHandle< vector<int>* > jet_isUgly;
      VarHandle< vector<int>* > jet_isBadLooseMinus;
      VarHandle< vector<int>* > jet_isBadLoose;
      VarHandle< vector<int>* > jet_isBadMedium;
      VarHandle< vector<int>* > jet_isBadTight;
      VarHandle< vector<float>* > jet_emfrac;
      VarHandle< vector<float>* > jet_GCWJES;
      VarHandle< vector<float>* > jet_EMJES;
      VarHandle< vector<float>* > jet_emscale_E;
      VarHandle< vector<float>* > jet_emscale_pt;
      VarHandle< vector<float>* > jet_emscale_m;
      VarHandle< vector<float>* > jet_emscale_eta;
      VarHandle< vector<float>* > jet_emscale_phi;
      VarHandle< vector<float>* > jet_jvtx_x;
      VarHandle< vector<float>* > jet_jvtx_y;
      VarHandle< vector<float>* > jet_jvtx_z;
      VarHandle< vector<float>* > jet_jvtxf;
      VarHandle< vector<double>* > jet_flavor_weight;
      VarHandle< vector<double>* > jet_flavor_weight_TrackCounting2D;
      VarHandle< vector<double>* > jet_flavor_weight_JetProb;
      VarHandle< vector<double>* > jet_flavor_weight_IP1D;
      VarHandle< vector<double>* > jet_flavor_weight_IP2D;
      VarHandle< vector<double>* > jet_flavor_weight_IP3D;
      VarHandle< vector<double>* > jet_flavor_weight_SV0;
      VarHandle< vector<double>* > jet_flavor_weight_SV1;
      VarHandle< vector<double>* > jet_flavor_weight_SV2;
      VarHandle< vector<double>* > jet_flavor_weight_JetFitterTag;
      VarHandle< vector<double>* > jet_flavor_weight_JetFitterCOMB;
      VarHandle< vector<double>* > jet_flavor_weight_JetFitterTagNN;
      VarHandle< vector<double>* > jet_flavor_weight_JetFitterCOMBNN;
      VarHandle< vector<double>* > jet_flavor_weight_SoftMuonTag;
      VarHandle< vector<double>* > jet_flavor_weight_SoftElectronTag;
      VarHandle< vector<double>* > jet_flavor_weight_IP3DSV1;
      VarHandle< vector<float>* > jet_e_PreSamplerB;
      VarHandle< vector<float>* > jet_e_EMB1;
      VarHandle< vector<float>* > jet_e_EMB2;
      VarHandle< vector<float>* > jet_e_EMB3;
      VarHandle< vector<float>* > jet_e_PreSamplerE;
      VarHandle< vector<float>* > jet_e_EME1;
      VarHandle< vector<float>* > jet_e_EME2;
      VarHandle< vector<float>* > jet_e_EME3;
      VarHandle< vector<float>* > jet_e_HEC0;
      VarHandle< vector<float>* > jet_e_HEC1;
      VarHandle< vector<float>* > jet_e_HEC2;
      VarHandle< vector<float>* > jet_e_HEC3;
      VarHandle< vector<float>* > jet_e_TileBar0;
      VarHandle< vector<float>* > jet_e_TileBar1;
      VarHandle< vector<float>* > jet_e_TileBar2;
      VarHandle< vector<float>* > jet_e_TileGap1;
      VarHandle< vector<float>* > jet_e_TileGap2;
      VarHandle< vector<float>* > jet_e_TileGap3;
      VarHandle< vector<float>* > jet_e_TileExt0;
      VarHandle< vector<float>* > jet_e_TileExt1;
      VarHandle< vector<float>* > jet_e_TileExt2;
      VarHandle< vector<float>* > jet_e_FCAL0;
      VarHandle< vector<float>* > jet_e_FCAL1;
      VarHandle< vector<float>* > jet_e_FCAL2;
      VarHandle< vector<vector<float> >* > jet_shapeBins;
      /// Number of ntuple rows.
      VarHandle< vector<int>* > track_atTJVA_n;
      VarHandle< vector<vector<float> >* > track_atTJVA_d0;
      VarHandle< vector<vector<float> >* > track_atTJVA_z0;
      VarHandle< vector<vector<float> >* > track_atTJVA_phi;
      VarHandle< vector<vector<float> >* > track_atTJVA_theta;
      VarHandle< vector<vector<float> >* > track_atTJVA_qoverp;
      VarHandle< vector<vector<float> >* > track_atTJVA_pt;
      VarHandle< vector<vector<float> >* > track_atTJVA_eta;
      /// Number of ntuple rows.
      VarHandle< vector<int>* > seedCalo_wideTrk_atTJVA_n;
      VarHandle< vector<vector<float> >* > seedCalo_wideTrk_atTJVA_d0;
      VarHandle< vector<vector<float> >* > seedCalo_wideTrk_atTJVA_z0;
      VarHandle< vector<vector<float> >* > seedCalo_wideTrk_atTJVA_phi;
      VarHandle< vector<vector<float> >* > seedCalo_wideTrk_atTJVA_theta;
      VarHandle< vector<vector<float> >* > seedCalo_wideTrk_atTJVA_qoverp;
      VarHandle< vector<vector<float> >* > seedCalo_wideTrk_atTJVA_pt;
      VarHandle< vector<vector<float> >* > seedCalo_wideTrk_atTJVA_eta;
      /// Number of ntuple rows.
      VarHandle< vector<int>* > otherTrk_atTJVA_n;
      /// Number of ntuple rows.
      VarHandle< vector<int>* > track_n;
      VarHandle< vector<vector<float> >* > track_d0;
      VarHandle< vector<vector<float> >* > track_z0;
      VarHandle< vector<vector<float> >* > track_phi;
      VarHandle< vector<vector<float> >* > track_theta;
      VarHandle< vector<vector<float> >* > track_qoverp;
      VarHandle< vector<vector<float> >* > track_pt;
      VarHandle< vector<vector<float> >* > track_eta;
      VarHandle< vector<vector<float> >* > track_atPV_d0;
      VarHandle< vector<vector<float> >* > track_atPV_z0;
      VarHandle< vector<vector<float> >* > track_atPV_phi;
      VarHandle< vector<vector<float> >* > track_atPV_theta;
      VarHandle< vector<vector<float> >* > track_atPV_qoverp;
      VarHandle< vector<vector<float> >* > track_atPV_pt;
      VarHandle< vector<vector<float> >* > track_atPV_eta;
      VarHandle< vector<vector<int> >* > track_nBLHits;
      VarHandle< vector<vector<int> >* > track_nPixHits;
      VarHandle< vector<vector<int> >* > track_nSCTHits;
      VarHandle< vector<vector<int> >* > track_nTRTHits;
      VarHandle< vector<vector<int> >* > track_nTRTHighTHits;
      VarHandle< vector<vector<int> >* > track_nTRTXenonHits;
      VarHandle< vector<vector<int> >* > track_nPixHoles;
      VarHandle< vector<vector<int> >* > track_nSCTHoles;
      VarHandle< vector<vector<int> >* > track_nTRTHoles;
      VarHandle< vector<vector<int> >* > track_nPixelDeadSensors;
      VarHandle< vector<vector<int> >* > track_nSCTDeadSensors;
      VarHandle< vector<vector<int> >* > track_nBLSharedHits;
      VarHandle< vector<vector<int> >* > track_nPixSharedHits;
      VarHandle< vector<vector<int> >* > track_nSCTSharedHits;
      VarHandle< vector<vector<int> >* > track_nBLayerSplitHits;
      VarHandle< vector<vector<int> >* > track_nPixSplitHits;
      VarHandle< vector<vector<int> >* > track_nBLayerOutliers;
      VarHandle< vector<vector<int> >* > track_nPixelOutliers;
      VarHandle< vector<vector<int> >* > track_nSCTOutliers;
      VarHandle< vector<vector<int> >* > track_nTRTOutliers;
      VarHandle< vector<vector<int> >* > track_nTRTHighTOutliers;
      VarHandle< vector<vector<int> >* > track_nContribPixelLayers;
      VarHandle< vector<vector<int> >* > track_nGangedPixels;
      VarHandle< vector<vector<int> >* > track_nGangedFlaggedFakes;
      VarHandle< vector<vector<int> >* > track_nPixelSpoiltHits;
      VarHandle< vector<vector<int> >* > track_nSCTDoubleHoles;
      VarHandle< vector<vector<int> >* > track_nSCTSpoiltHits;
      VarHandle< vector<vector<int> >* > track_expectBLayerHit;
      VarHandle< vector<vector<int> >* > track_nHits;
      VarHandle< vector<vector<float> >* > track_TRTHighTHitsRatio;
      VarHandle< vector<vector<float> >* > track_TRTHighTOutliersRatio;
      /// Number of ntuple rows.
      VarHandle< vector<int>* > seedCalo_track_n;
      /// Number of ntuple rows.
      VarHandle< vector<int>* > seedCalo_wideTrk_n;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nBLHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nPixHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nSCTHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nTRTHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nTRTHighTHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nTRTXenonHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nPixHoles;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nSCTHoles;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nTRTHoles;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nPixelDeadSensors;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nSCTDeadSensors;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nBLSharedHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nPixSharedHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nSCTSharedHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nBLayerSplitHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nPixSplitHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nBLayerOutliers;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nPixelOutliers;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nSCTOutliers;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nTRTOutliers;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nTRTHighTOutliers;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nContribPixelLayers;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nGangedPixels;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nGangedFlaggedFakes;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nPixelSpoiltHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nSCTDoubleHoles;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nSCTSpoiltHits;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_expectBLayerHit;
      VarHandle< vector<vector<int> >* > seedCalo_wideTrk_nHits;
      /// Number of ntuple rows.
      VarHandle< vector<int>* > otherTrk_n;
      /// DeltaR between the offline and trigger objects.
      VarHandle< vector<float>* > EF_dr;
      VarHandle< vector<float>* > EF_E;
      VarHandle< vector<float>* > EF_Et;
      VarHandle< vector<float>* > EF_pt;
      VarHandle< vector<float>* > EF_eta;
      VarHandle< vector<float>* > EF_phi;
      VarHandle< vector<int>* > EF_matched;
      /// DeltaR between the offline and trigger objects.
      VarHandle< vector<float>* > L2_dr;
      VarHandle< vector<float>* > L2_E;
      VarHandle< vector<float>* > L2_Et;
      VarHandle< vector<float>* > L2_pt;
      VarHandle< vector<float>* > L2_eta;
      VarHandle< vector<float>* > L2_phi;
      VarHandle< vector<int>* > L2_matched;
      /// DeltaR between the offline and trigger objects.
      VarHandle< vector<float>* > L1_dr;
      VarHandle< vector<float>* > L1_Et;
      VarHandle< vector<float>* > L1_pt;
      VarHandle< vector<float>* > L1_eta;
      VarHandle< vector<float>* > L1_phi;
      VarHandle< vector<int>* > L1_matched;
// MC only
      VarHandle< vector<float>* > trueTauAssocSmall_dr;
      /// Index in trueTau_
      VarHandle< vector<int>* > trueTauAssocSmall_index;
      VarHandle< vector<int>* > trueTauAssocSmall_matched;
// end MC only
      VarHandle< vector<vector<float> >* > MET_wpx;
      VarHandle< vector<vector<float> >* > MET_wpy;
      VarHandle< vector<vector<float> >* > MET_wet;
      VarHandle< vector<vector<unsigned int> >* > MET_statusWord;
      VarHandle< vector<vector<float> >* > MET_STVF_wpx;
      VarHandle< vector<vector<float> >* > MET_STVF_wpy;
      VarHandle< vector<vector<float> >* > MET_STVF_wet;
      VarHandle< vector<vector<unsigned int> >* > MET_STVF_statusWord;

   private:
      mutable std::vector< TauD3PDObjectElement > fProxies; ///< Internal list of proxy objects
      std::map< ::TString, VarHandleBase* > fHandles; ///< Book-keeper of the VarHandle members
      const ::Bool_t fFromInput; ///< Flag specifying if object is used for D3PD reading
      const ::TString fPrefix; ///< Prefix to the branch names


bool is_data; // ~bj 

      ClassDef( TauD3PDObject, 0 )

   }; // class TauD3PDObject

} // namespace D3PDReader

#endif // D3PDREADER_TauD3PDObject_H
